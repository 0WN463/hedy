---
1:
  intro_text: "Καλωσήρθες στη Hedy! Στο επίπεδο 1 μπορείς να χρησιμοποιήσεις τις εντολές `print`, `ask`, και `echo`. Πάτησε το μπλε κουμπί και ο κώδικας θα πληκτρολογηθεί για σένα. Δοκίμασε και εσύ τον κώδικα πατώντας το πράσινο κουμπί 'Εκτέλεσε τον κώδικά' κάτω από το αριστερό προγραμματιστικό πεδίο."
  start_code: 'print γειά σου κόσμε!'
  commands:
    - name: 'print'
      explanation: 'Εμφάνισε κάτι με την `print`.'
      example: 'Παράδειγμα: print Γειά, καλωσήλθες στη Hedy!'
      demo_code: 'print Γειά, καλωσήλθες στη Hedy!'
    - name: 'ask'
      explanation: 'Ρώτησε κάτι με την `ask`.'
      example: 'Παράδειγμα: ask Ποιό είναι το αγαπημένο σου χρώμα;'
      demo_code: 'ask Ποιό είναι το αγαπημένο σου χρώμα;'
    - name: 'echo'
      explanation: 'Eπανάλαβε κάτι χρησιμποιώντας την `echo`.'
      example: 'Παράδειγμα: echo ώστε το αγαπημένο σου χρώμα είναι το...'
      demo_code:
        "ask Ποιό είναι το αγαπημένο σου χρώμα;\necho ώστε το αγαπημένο σου χρώμα είναι το..."
2:
  intro_text: 'Η print λειτουργεί όπως και στο επίπεδο 1, όμως η ask έχει αλλαχθεί και πλέον χρειάζεται ένα όνομα, το οποίο έπειτα μπορείς να εμφανίσεις. Η echo πλέον δε χρειάζεται. Μπορείς τώρα να χρησιμοποιήσεις επιπλέον αυτές τις εντολές:'
  start_code: 'print γειά σου κόσμε!'
  commands:
    - name: 'is'
      explanation: 'Δώσε ένα όνομα σε μια λέξη για να τη χρησιμοποιήσεις στο πρόγραμμα χρησιμοποιώντας την `is`'
      example: 'Παράδειγμα:  name is Hedy.'
      demo_code: "name is Hedy\nprint καλωσήλθες name"
    - name: 'ask'
      explanation: 'Ρώτησε κάτι με την `ask`. Πρόσεξε! Πρέπει να δώσεις στην απάντηση ένα όνομα με την `is`.'
      example: 'Παράδειγμα: color is ask Ποιό είναι το αγαπημένο σου χρώμα;'
      demo_code:
        "color is ask Ποιό είναι το αγαπημένο σου χρώμα;\nprint το color είναι το αγαπημένο σου!"
    - name: 'choose_random'
      explanation: 'Επίλεξε μια τυχαία λέξη από μια ομάδα με τις `at` και `random`'
      example: 'Παράδειγμα: animals is σκύλος, γάτα, καγκουρό'
      demo_code: "animals is σκύλος, γάτα, καγκουρό\nprint animals at random"
3:
  start_code: "print 'Γειά σου κόσμε'"
  intro_text: 'Η `ask` παραμένει ίδια στο επίπεδο 3, όμως η `print` είναι πλέον διαφορετική. Πρέπει να περικλείσεις το κείμενο που θέλεις να εμφανίσεις σε εισαγωγικά.'
  commands:
    - name: 'print'
      explanation: 'Εμφάνισε κάτι ακριβώς, χρησιμοποιώντας εισαγωγικά'
      example: "Παράδειγμα: print 'Γειά, καλωσήλθες στη Hedy.'"
      demo_code: "print 'Γειά, καλωσήλθες στη Hedy.'"
    - name: 'is'
      explanation: 'Δώσε ένα όνομα σε κάποιο κείμενο και εμφάνισε με την `print` χωρίς εισαγωγικά'
      example: 'Παράδειγμα: name is Hedy.'
      demo_code: "name is Hedy\nprint 'Το όνομά μου είναι ' name"
    - name: 'ask'
      explanation: 'Ρώτησε κάτι με την `ask`.'
      example: 'Example: color is ask Ποιό είναι το αγαπημένο σου χρώμα;'
      demo_code:
        "color is ask Ποιό είναι το αγαπημένο σου χρώμα;?\nprint 'το ' color ' είναι το αγαπημένο σου!'"
4:
  start_code:
    "name is ask Ποιό είναι το όνομά σου;\nif name is Hedy print 'τέλεια!' else print 'έτσι κι έτσι'"
  intro_text: 'Οι `ask` και `print` λειτουργούν ακριβώς όπως στο επίπεδο 3. Το επίπεδο 4 προσθέτει τη δήλωση `if`!'
  commands:
    - name: 'print'
      explanation: 'Εμφάνισε κάτι ακριβώς, χρησιμοποιώντας εισαγωγικά'
      example: "Παράδειγμα: print 'Γειά, καλωσήλθες στη Hedy.'"
      demo_code: "print 'Γειά, καλωσήλθες στη Hedy.'"
    - name: 'ask'
      explanation: 'Ρώτησε κάτι με την `ask`.'
      example: 'Example: color is ask Ποιό είναι το αγαπημένο σου χρώμα;'
      demo_code:
        "color is ask Ποιό είναι το αγαπημένο σου χρώμα;\nprint 'το ' color ' είναι το αγαπημένο σου!'"
    - name: 'if'
      explanation: 'Κάνε μια επιλογή με την `if`'
      example: "Παράδειγμα: if color is green print 'όμορφο!' else print 'έτσι κι έτσι'"
      demo_code:
        "color is ask Ποιό είναι το αγαπημένο σου χρώμα;\nif color is green print 'όμορφο!' else print 'έτσι κι έτσι'"
5:
  start_code: "repeat 3 times print 'Η Hedy είναι διασκεδαστική!'"
  intro_text: 'Οι `ask`, `print` και `if` λειτουργούν ακριβώς όπως και στο Επίπεδο 4. Όμως, το Επίπεδο 5 προσθέτει την εντολή `repeat`. H Repeat (Επανάληψη) μπορεί να χρησιμποιηθεί για να εκτελέσουμε μια γραμμή κώδικα πολλές φορές.'
  commands:
    - name: 'print'
      explanation: 'Εμφάνισε κάτι ακριβώς, χρησιμοποιώντας εισαγωγικά'
      example: "Παράδειγμα: print 'Γειά, καλωσήλθες στη Hedy.'"
      demo_code: "print 'Γειά, καλωσήλθες στη Hedy.'"
    - name: 'ask'
      explanation: 'Ρώτησε κάτι με την `ask`.'
      example: 'Παράδειγμα: color is ask Ποιό είναι το αγαπημένο σου χρώμα;'
      demo_code:
        "color is ask Ποιό είναι το αγαπημένο σου χρώμα;?\nprint 'το ' color ' είναι το αγαπημένο σου!"
    - name: 'if'
      explanation: 'Κάνε μια επιλογή με την `if`'
      example: "Παράδειγμα: if color is green print 'όμορφο!' else print 'έτσι κι έτσι'"
      demo_code:
        "color is ask Ποιό είναι το αγαπημένο σου χρώμα;\nif color is green print 'όμορφο!' else print 'έτσι κι έτσι'"
    - name: 'repeat'
      explanation: 'Οι `repeat` και `if` σε συνδυασμό'
      example: "Παράδειγμα: if color is green repeat 3 times print 'όμορφο!' else repeat 5 times print 'έτσι κι έτσι'"
      demo_code:
        "color is ask Ποιό είναι το αγαπημένο σου χρώμα;\nif color is green repeat 3 times print 'όμορφο!' else repeat 5 times print 'έτσι κι έτσι'"
6:
  start_code: "print '5 επί 5 ίσον με ' 5 * 5"
  intro_text: 'Οι `ask`, `print`, `if` και `repeat` είναι ακόμα ίδις όπως και στα Επίπεδα 4 και 5. Το Επίπεδο 6 προσθέτει κάτι καινούριο...Πλέον μπορείς να κάνεις υπολογισμούς.'
  commands:
    - name: 'print'
      explanation: 'Εμφάνισε κάτι ακριβώς χρησιμοποιώντας εισαγωγικά'
      example: "Παράδειγμα: print '5 επί 5 ίσον με ' 5 * 5"
      demo_code: "print '5 επί 5 είναι ' 5 * 5"
    - name: 'Οι `ask` και `if` με υπολογισμούς'
      explanation: 'Ρώτησε σχετικά με έναν υπολογισμό και έλεγξε ότι είναι σωστός.'
      example: 'Παράδειγμα: answer is ask Πόσο είναι 10 + 10;'
      demo_code:
        "answer is ask Πόσο είναι 10 + 10;\nif answer is 20 print 'Ναι!' else print 'Ουπς'"
    - name: 'repeat'
      explanation: 'Οι `repeat` και `if` σε συνδυασμό'
      example: "Παράδειγμα: if color is green repeat 3 times print 'όμορφο!' else repeat 5 times print 'έτσι κι έτσι'"
      demo_code:
        "color is ask Ποιό είναι το αγαπημένο σου χρώμα;\nif color is green repeat 3 times print 'όμορφο!' else repeat 5 times print 'έτσι κι έτσι'"
7:
  start_code:
    "repeat 5 times\n    print 'Γειά σας παιδιά'\n    print 'Αυτό θα εμφανιστεί 5 φορές'"
  intro_text: 'Οι ask και print λειτουργούν ακόμα όπως τις γνωρίζετε. Όμως, οι if και repeat έχουν αλλάξει! Τώρα μπορείτε να εκτελείτε μαζί ομάδες κώδικα, αλλά θα πρέπει να βάλετε εσοχή στον κώδικα. Αυτό σημαίνει να προσθέσετε τέσσερα κενά στην αρχή της γραμμής. Το ίδιο ισχύει όταν θέλετε να δημιουργήσετε ένα μπλοκ μιας γραμμής. Αν συνδυάσετε μια repeat με μια if, θα πρέπει να βάλετε εσοχή σε κάθε μπλοκ. Δείτε το παράδειγμα κώδικα για περισσότερες λεπτομέρειες!'

  commands:
    - name: 'print'
      explanation: 'Εμφάνισε κάτι. Θυμήσου να χρησιμοποιήσεις εισαγωγικά για ακριβή εμφάνιση.'
      example: "Παράδειγμα: print '5 επί 5 ίσον με ' 5 * 5"
      demo_code: "print '5 επί 5 ίσον με ' 5 * 5"
    - name: 'Η `if` με πολλαπλές γραμμές'
      explanation: 'Ρώτησε την απάντηση σε ένα άθροισμα και έλεγξε αν είναι σωστή. Μπορούμε τώρα να εμφανίσουμε 2 γραμμές.'
      example: 'Παράδειγμα: answer is ask Πόσο είναι 5 συν 5?'
      demo_code:
        "answer is ask Πόσο είναι 5 συν 5;\nif answer is 10\n    print 'Μπράβο!'\n    print 'Πράγματι, η απάντηση ήταν ' answer\nelse\n    print 'Ουπς!'\n    print 'Η απάντηση είναι 10'"
    - name: 'if and repeat combined'
      explanation: 'Οι `if` και `repeat` σε συνδυασμό'
      example: "Παράδειγμα: if color is green repeat 3 times print 'όμορφο!' else repeat 5 times print 'έτσι κι έτσι'"
      demo_code:
        "color is ask οιό είναι το αγαπημένο σου χρώμα;\nif color is green repeat 3 times print 'όμορφο!' else repeat 5 times print 'έτσι κι έτσι'"
8:
  start_code:
    "for i in range 1 to 10\n    print i\nprint 'Ready or not, here I come!'"
  intro_text: '`print` works just the same but the `repeat` is now replaced by `for`! You use `for i in range 1 to 5`, instead of `repeat 5 times`. You can also use `i` in your program! Remember to use indentations after the `for` and `if` statements (That means starting a sentence with four spaces)'
  commands:
    - name: 'repeat'
      explanation: 'we replace `repeat` with `for`'
      example: 'for i in range 1 to 10'
      demo_code: |
        for i in range 1 to 10
          print i
        print 'Ready or not, here I come!'
9:
  start_code:
    "for i in range 1 to 10:\n    print i\nprint 'Ready or not, here I come!'"
  intro_text: 'Now we are going to change a little bit with indentation. Every time that we need an indentation, we need `:` at the line before the indentation.'
  commands:
    - name: 'for with :'
      explanation: 'When we use a `for`, we need to put a `:` behind the `for` statement!'
      example: 'for i in range 1 to 10:'
      demo_code:
        "for i in range 1 to 11:\n    print i\nprint 'Ready or not, here I come!'"
    - name: 'if with :'
      explanation: 'We need to do the same with all of our `if` statements'
      example: "if colour is green:'"
      demo_code:
        "colour is green\nif colour is green:\n    print 'The colour is green'\nelse:\n    print 'The colour is not green'"
    - name: '(Optional) elif'
      explanation: 'We will show you a new command that you are allowed to use: `elif`. `elif` means "else if". We start with checking if the `if` is correct, if that one is not true, we check the `elif` and if that one is also not true, we go to the `else`.'
      example: 'elif a is 5:'
      demo_code:
        "a is 2\nif a is 1:\n    print 'a is 1'\nelif a is 2:\n    print 'a is 2'\nelse:\n    print 'a is not 1 or 2'"
10:
  start_code:
    "for i in range 1 to 3:\n    for j in range 1 to 5:\n    print 'we are in round: ' i ' and we count: ' j"
  intro_text: 'From now on, we can repeat a loop more often. In the example we count to 5 and do that 3 times. So we do 3 rounds and count to 5 every time.'
  commands:
    - name: 'for under eachother'
      explanation: 'This is an example with the for statement'
      demo_code:
        "for i in range 1 to 3:\n    for j in range 1 to 5:\n    print 'we are in round: ' i ' and we count: ' j"
    - name: 'if under eachother'
      explanation: 'We can do the same with if statements'
      demo_code:
        "colour is blue\ncolourtwo is yellow\nif colour is blue:\n    if colourtwo is yellow:\n        print 'Together we make green!'"
11:
  start_code:
    "age is input('What is your age?')\nprint('So you have been these ages:')\nfor i in range(0,age):\n    print(i)"
  intro_text: 'We are going to put round brackets and we are going to change ask! We change ask into input! At print, ask and for, we are going to put round brackets now.'
  commands:
    - name: 'Print'
      explanation: 'We are going to put brackets around print now!'
      example: "For example: print('Hello World')"
      demo_code: "print('Hello World')"
    - name: 'Ask to input!'
      explanation: 'We remove ask and call it input now, also we are going to put brackets around it'
      example: "For example: answer is input('What is your name?')"
      demo_code:
        "answer = input('What is your name?')\nprint('So your name is ' answer)"
    - name: 'For with brackets'
      explanation: 'We are now putting brackets around the numbers in the for loop. for i in range (0,10):'
      example: 'For example: for i in range(0,10):'
      demo_code:
        "for i in range(0,10):\n    print(i)\nprint('Ready or not, here I come')"

12:
  start_code: "fruit is ['apple', 'banana', 'cherry']\nprint(fruit)"
  intro_text: "We are going to put square brackets around lists! Also we now need to put single quotation marks (') around items in lists. "
  commands:
    - name: 'Square brackets around lists'
      explanation: "We are going to put square brackets around lists! We also need to put ' around items in lists."
      example: "For example: fruit is ['apple', 'banana', 'cherry']"
      demo_code: "fruit is ['apple', 'banana', 'cherry']\nprint(fruit)"
    - name: 'Get an item from a list'
      explanation: 'To get an item from a list we use [number] so fruit[1] means, get the first fruit from the list!'
      example: 'For example: firstfruit is fruit[1]'
      demo_code:
        "fruit is ['banana', 'apple', 'cherry']\nfirstfruit is fruit[1]\nprint(firstfruit)"
    - name: 'Get an random item from a list'
      explanation: 'To get a random item from a list we use [random] so fruit[random] means, get a random fruit from the list!'
      example: 'For example: randomfruit is fruit[random]'
      demo_code:
        "fruit is ['banana', 'apple', 'cherry']\nrandomfruit is fruit[random]\nprint(randomfruit)"
13:
  start_code:
    "print('What is 5+3?')\nanswer = 5+3\nprint('answer is now:')\nprint(answer)\nif answer == 8:\n  print('That is correct!')\nelse:\n  print('Oh no, that is wrong!')"
  intro_text: 'Now we are going to change is into = and ==. We use = if we want to assign a value to a variable. If you want to assign 8 to the variable called anser, we do answer = 8. == we use when we want to see if two things are the same.'
  commands:
    - name: 'Compare'
      explanation: 'If we want to compare, we use ==. 5+3 == 8 checks if 5+3 equals 8'
      example: 'For example: 5+3 == 8'
      demo_code:
        "if 5+3 == 8:\n    print('5+3 is indeed 8')\nelse:\n  print('This will not be printed because 5+3 is 8!')"
    - name: 'Assign Value'
      explanation: 'If we want to say that a variable called anser is 8, we do answer = 8.'
      example: 'For example: answer = 8'
      demo_code:
        "print('What is 5+3?')\nanswer = 5+3\nprint('answer is now:')\nprint(answer)"
    - name: 'Compare and assign value'
      explanation: 'If we are going to compare two values, we use ==. If we are going to assign a variable, we use =. '
      example: 'For example: 5+3 == 8, answer = 8'
      demo_code:
        "print('What is 5+3?')\nanswer = 5+3\nprint('answer is now:')\nprint(answer)\nif answer == 8:\n  print('That is correct!')\nelse:\n  print('No, that is wrong!')"
